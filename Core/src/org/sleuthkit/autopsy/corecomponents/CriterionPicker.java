/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.sleuthkit.autopsy.corecomponents;

import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.SortOrder;
import org.openide.nodes.Node;

public class CriterionPicker extends javax.swing.JPanel {

    private final List<Node.Property<?>> availableProps;
    private final DefaultComboBoxModel<Node.Property<?>> defaultComboBoxModel;

    static class Criterion {

        private final Node.Property<?> prop;
        private final SortOrder order;

        Node.Property<?> getProp() {
            return prop;
        }

        SortOrder getOrder() {
            return order;
        }

        Criterion(Node.Property<?> prop, SortOrder order) {
            this.prop = prop;
            this.order = order;
        }
    }

    /**
     * Creates new form CriteriaPicker
     */
    public CriterionPicker(List<Node.Property<?>> availableProps) {
        initComponents();
        this.availableProps = availableProps;
        defaultComboBoxModel = new DefaultComboBoxModel<>(availableProps.toArray(new Node.Property<?>[availableProps.size()]));
        propComboBox.setModel(defaultComboBoxModel);
        propComboBox.setRenderer((list, value, index, isSelected, cellHasFocus)
                -> defaultListCellRenderer.getListCellRendererComponent(list, value == null ? "" : value.getName(), index, isSelected, cellHasFocus));
    }
    private DefaultListCellRenderer defaultListCellRenderer = new DefaultListCellRenderer();

    public Criterion getSelectedCriteria() {
        return new Criterion((Node.Property<?>) propComboBox.getSelectedItem(),
                ascendingRadio.isSelected() ? SortOrder.ASCENDING : SortOrder.DESCENDING);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sortOrderGroup = new javax.swing.ButtonGroup();
        propComboBox = new javax.swing.JComboBox<>();
        label1 = new java.awt.Label();
        ascendingRadio = new javax.swing.JRadioButton();
        descendingRadio = new javax.swing.JRadioButton();
        removeButton = new java.awt.Button();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        label1.setText("Sort By: ");

        ascendingRadio.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(ascendingRadio, org.openide.util.NbBundle.getMessage(CriterionPicker.class, "CriterionPicker.ascendingRadio.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(descendingRadio, org.openide.util.NbBundle.getMessage(CriterionPicker.class, "CriterionPicker.descendingRadio.text")); // NOI18N

        removeButton.setLabel(org.openide.util.NbBundle.getMessage(CriterionPicker.class, "CriterionPicker.removeButton.label")); // NOI18N
        removeButton.setName(""); // NOI18N
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(propComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ascendingRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(descendingRadio))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ascendingRadio)
                        .addGap(0, 0, 0)
                        .addComponent(descendingRadio))
                    .addComponent(propComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removeButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ascendingRadio;
    private javax.swing.JRadioButton descendingRadio;
    private java.awt.Label label1;
    private javax.swing.JComboBox<Node.Property<?>> propComboBox;
    private java.awt.Button removeButton;
    private javax.swing.ButtonGroup sortOrderGroup;
    // End of variables declaration//GEN-END:variables
}
