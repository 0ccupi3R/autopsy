/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.sleuthkit.autopsy.filequery;

import java.util.ArrayList;
import java.util.List;
import javax.swing.event.ListSelectionListener;
import org.sleuthkit.datamodel.AbstractFile;

/**
 *
 * @author wschaefer
 */
public class DocumentViewer extends javax.swing.JPanel {

    /**
     * Creates new form DocumentViewer
     */
    public DocumentViewer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    void clearViewer() {
        synchronized (this) {
//            thumbnailListModel.removeAllElements();
//            thumbnailListScrollPane.getVerticalScrollBar().setValue(0);
        }
    }

    /**
     * Add a selection listener to the list of thumbnails being displayed.
     *
     * @param listener The ListSelectionListener to add to the selection model.
     */
    void addListSelectionListener(ListSelectionListener listener) {
//        thumbnailList.getSelectionModel().addListSelectionListener(listener);
    }

    List<AbstractFile> getInstancesForSelected() {
        synchronized (this) {
//            if (thumbnailList.getSelectedIndex() == -1) {
//                return new ArrayList<>();
//            } else {
//                return thumbnailListModel.getElementAt(thumbnailList.getSelectedIndex()).getResultFile().getAllInstances();
//            }
            return new ArrayList<>();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
