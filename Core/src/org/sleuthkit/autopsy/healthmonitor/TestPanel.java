/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.sleuthkit.autopsy.healthmonitor;

import java.awt.Dimension;
import org.sleuthkit.autopsy.coreutils.ModuleSettings;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.JDialog;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.BorderFactory;
import java.util.Map;
import javax.swing.BoxLayout;
import org.sleuthkit.autopsy.healthmonitor.ServicesHealthMonitor.DatabaseTimingResult; // TEMP TEMP

/**
 * This is for testing the Health Monitor code
 */
public class TestPanel extends javax.swing.JDialog {

    /**
     * Creates new form TestPanel
     */
    public TestPanel(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        durationTextField = new javax.swing.JTextField();
        submitMetricButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        printMapButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        enabledCheckBox = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        updateUIButton = new javax.swing.JButton();
        textExistButton = new javax.swing.JButton();
        graphButton = new javax.swing.JButton();
        nDaysTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nNodesTextField = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.jLabel2.text")); // NOI18N

        nameTextField.setText(org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.nameTextField.text")); // NOI18N

        durationTextField.setText(org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.durationTextField.text")); // NOI18N
        durationTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durationTextFieldActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(submitMetricButton, org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.submitMetricButton.text")); // NOI18N
        submitMetricButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitMetricButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(closeButton, org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.closeButton.text")); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(printMapButton, org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.printMapButton.text")); // NOI18N
        printMapButton.setEnabled(false);
        printMapButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printMapButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(enabledCheckBox, org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.enabledCheckBox.text")); // NOI18N
        enabledCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enabledCheckBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.jButton1.text")); // NOI18N
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(deleteButton, org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.deleteButton.text")); // NOI18N
        deleteButton.setEnabled(false);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(updateUIButton, org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.updateUIButton.text")); // NOI18N
        updateUIButton.setEnabled(false);
        updateUIButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateUIButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(textExistButton, org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.textExistButton.text")); // NOI18N
        textExistButton.setEnabled(false);
        textExistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textExistButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(graphButton, org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.graphButton.text")); // NOI18N
        graphButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphButtonActionPerformed(evt);
            }
        });

        nDaysTextField.setText(org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.nDaysTextField.text")); // NOI18N
        nDaysTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nDaysTextFieldActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.jLabel4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.jLabel5.text")); // NOI18N

        nNodesTextField.setText(org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.nNodesTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton2, org.openide.util.NbBundle.getMessage(TestPanel.class, "TestPanel.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(deleteButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(closeButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(durationTextField)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addComponent(submitMetricButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(printMapButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(enabledCheckBox)
                                        .addGap(18, 18, 18)
                                        .addComponent(updateUIButton))
                                    .addComponent(textExistButton))
                                .addGap(0, 225, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(graphButton)
                        .addGap(142, 142, 142))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nDaysTextField))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nNodesTextField))
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(durationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitMetricButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(printMapButton)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(graphButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enabledCheckBox)
                    .addComponent(updateUIButton))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nDaysTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nNodesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(textExistButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(closeButton)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(deleteButton)
                        .addGap(23, 23, 23))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void durationTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durationTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_durationTextFieldActionPerformed

    private void printMapButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printMapButtonActionPerformed
        /*try {
            ServicesHealthMonitor.getInstance().printCurrentState();
        } catch (HealthMonitorException ex){
            ex.printStackTrace();
        }*/
    }//GEN-LAST:event_printMapButtonActionPerformed

    private void submitMetricButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitMetricButtonActionPerformed

        if(nameTextField.getText().isEmpty() || durationTextField.getText().isEmpty()) {
            return;
        }
        TimingMetric m = ServicesHealthMonitor.getTimingMetric(nameTextField.getText());
        try {
            Thread.sleep(Long.parseLong(durationTextField.getText()));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        ServicesHealthMonitor.submitTimingMetric(m);
    }//GEN-LAST:event_submitMetricButtonActionPerformed

    private void enabledCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enabledCheckBoxActionPerformed
        try {
            ServicesHealthMonitor.setEnabled(enabledCheckBox.isSelected());
        } catch (HealthMonitorException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_enabledCheckBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        /*try {
            ServicesHealthMonitor.getInstance().writeCurrentStateToDatabase();
        } catch (HealthMonitorException ex){
            ex.printStackTrace();
        }*/
    }//GEN-LAST:event_jButton1ActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        /*try {
            ServicesHealthMonitor.getInstance().deleteDatabase();
        } catch (HealthMonitorException ex){
            ex.printStackTrace();
        }*/
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void updateUIButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateUIButtonActionPerformed
        if (ModuleSettings.settingExists("ServicesHealthMonitor", "is_enabled")) {
            if(ModuleSettings.getConfigSetting("ServicesHealthMonitor", "is_enabled").equals("true")){
                enabledCheckBox.setSelected(true);
                return;
            }
        }
        enabledCheckBox.setSelected(false);
    }//GEN-LAST:event_updateUIButtonActionPerformed

    private void textExistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textExistButtonActionPerformed
        /*try {
            ServicesHealthMonitor.getInstance().databaseExists();
        } catch (Exception ex) {
            ex.printStackTrace();
        }*/
    }//GEN-LAST:event_textExistButtonActionPerformed

    private void graphButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphButtonActionPerformed

        
        // TEMP TEMP

        try {
            Map<String, List<DatabaseTimingResult>> timingData =  ServicesHealthMonitor.getInstance().getTimingMetricsFromDatabase();
            
            String[] dateOptionStrings = {"All", "Two weeks", "One week"};
            JComboBox dateComboBox = new JComboBox(dateOptionStrings);
            dateComboBox.setSelectedItem("Two weeks");
            
            JPanel timingButtonPanel = new JPanel();
            timingButtonPanel.setBorder(BorderFactory.createEtchedBorder()); 
            //timingButtonPanel.setLayout(new FlowLayout());
            timingButtonPanel.add(new JLabel("Max days to display"));
            timingButtonPanel.add(dateComboBox);
            
            int numberOfMetrics = timingData.keySet().size();
            System.out.println("\n### Number of metric types: " + numberOfMetrics);

            JPanel graphPanel = new JPanel();
            graphPanel.setLayout(new BoxLayout(graphPanel, BoxLayout.PAGE_AXIS));
            graphPanel.setBorder(BorderFactory.createEtchedBorder()); 
            graphPanel.add(timingButtonPanel);
            
            for(String name:timingData.keySet()) {
                System.out.println("  Making panel for " + name);
                JLabel label = new JLabel(name);
                graphPanel.add(label);
                TimingMetricGraphPanel timingGraphPanel = new TimingMetricGraphPanel(timingData.get(name), TimingMetricGraphPanel.TimingMetricType.AVERAGE, true);
                timingGraphPanel.setPreferredSize(new Dimension(800,200));
                graphPanel.add(timingGraphPanel);
            }
            
            graphPanel.revalidate();
            graphPanel.repaint();
            
            
            JScrollPane scrollPane = new JScrollPane(graphPanel);
            
            System.out.println("Creating dialog");
            JDialog dialog = new JDialog();
            dialog.setPreferredSize(new Dimension(1500, 800));
            dialog.setTitle("Services Health Monitor");
            //dialog.add(graphPanel);
            dialog.add(scrollPane);
            dialog.pack();
            dialog.setVisible(true);
            System.out.println("Done displaying dialog");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
        
    }//GEN-LAST:event_graphButtonActionPerformed

    private void nDaysTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nDaysTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nDaysTextFieldActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        if(nDaysTextField.getText().isEmpty() || nNodesTextField.getText().isEmpty()) {
            System.out.println("Missing fields");
            return;
        }

        try {
            int nDays = Integer.valueOf(nDaysTextField.getText());
            int nNodes = Integer.valueOf(nNodesTextField.getText());
            ServicesHealthMonitor.getInstance().populateDatabase(nDays, nNodes); // TEMP TEMP
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField durationTextField;
    private javax.swing.JCheckBox enabledCheckBox;
    private javax.swing.JButton graphButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField nDaysTextField;
    private javax.swing.JTextField nNodesTextField;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JButton printMapButton;
    private javax.swing.JButton submitMetricButton;
    private javax.swing.JButton textExistButton;
    private javax.swing.JButton updateUIButton;
    // End of variables declaration//GEN-END:variables
}
