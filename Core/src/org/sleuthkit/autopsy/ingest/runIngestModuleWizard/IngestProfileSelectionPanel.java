/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.sleuthkit.autopsy.ingest.runIngestModuleWizard;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;

public final class IngestProfileSelectionPanel extends JPanel implements ItemListener {

    RunIngestModuleWizardWizardPanel1 wizardPanel;

    /**
     * Creates new form runIngestModuleWizardVisualPanel1
     */
    public IngestProfileSelectionPanel(RunIngestModuleWizardWizardPanel1 panel) {
        initComponents();
        //WJS-TODO figure out how to get width of writable area, if text length greater than width. Trim text to width minus 3 chars in length and then add ... to the end
        wizardPanel = panel;
        int[] tempIDs = getElements();
        customSettings = new JRadioButton("Custom Settings - configure individual module settings");
        customSettings.setRolloverEnabled(true);
        customSettings.setToolTipText("configure individual module settings");
        buttonGroup1.add(customSettings);
        jPanel1.add(customSettings);
        for (int i = 0; i < tempIDs.length; i++) {
            JRadioButton myRadio = new JRadioButton("Fiction Profile #" + i + " - This is a fictional profile for place holder text");
            myRadio.addItemListener(this);
            buttonGroup1.add(myRadio);
            jPanel1.add(myRadio);
        }

    }

    @Override
    public String getName() {
        return "Ingest Profile Selection";
    }

    int getNumOfElements() {
        return 10;
    }

    int[] getElements() {
        int size = getNumOfElements();
        int[] elements = new int[size];
        for (int i = 5; i < 5 + size; i++) {
            elements[i - 5] = i;
        }
        return elements;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(IngestProfileSelectionPanel.class, "IngestProfileSelectionPanel.jButton1.text")); // NOI18N

        jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel1.setAutoscrolls(true);
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.PAGE_AXIS));
        jScrollPane1.setViewportView(jPanel1);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(IngestProfileSelectionPanel.class, "IngestProfileSelectionPanel.jLabel1.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 523, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents


    boolean hasNextPanel = true;
    private JRadioButton customSettings;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void itemStateChanged(ItemEvent e) {
        boolean hadNextPanel = hasNextPanel;
        hasNextPanel= !hasNextPanel;
        System.out.println("SWITCHED VALUES, VALUE NOW:"+ hasNextPanel); 
        wizardPanel.fireChangeEvent();
        this.firePropertyChange("LAST_ENABLED", hadNextPanel, hasNextPanel);
    }
}
