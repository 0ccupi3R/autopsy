TextClassifierModuleFactory.moduleDescription.text=Use text classifiers to label potentially interesting files.
TextClassifierModuleFactory.moduleName.text=Text Classifier
TextClassifierTrainerReportModule.cannotProcess.text=Exception while converting training data
TextClassifierTrainerReportModule.cannotSave.text=Cannot save model: 
TextClassifierTrainerReportModule.completeModelLocation.text=Complete. Model location: 
TextClassifierTrainerReportModule.converting.text=Converting training documents
TextClassifierTrainerReportModule.fetchFailed.text=Exception while fetching training data
TextClassifierTrainerReportModule.fetching.text=Fetching training documents
TextClassifierTrainerReportModule.getDesc.text=Train a machine learning model to classify which documents are notable. Before training, you will need to\n1. run the Ingest Module for File Type Identification\n2. add the file tag "Notable item (notable)" to documents you know are notable.\nOnce you've trained a model, you can classify documents by running the "Text Classifier" Ingest Module.
TextClassifierTrainerReportModule.getName.text=Text classifier model
TextClassifierTrainerReportModule.inProgress.text=In progress
TextClassifierTrainerReportModule.needFileType.text=File type detection must complete before generating this report.
TextClassifierTrainerReportModule.needNonnotable.text=Training set must contain at least one nonnotable document
TextClassifierTrainerReportModule.needNotable.text=Training set must contain at least one notable document
TextClassifierTrainerReportModule.noDocs.text=No documents found. You may need to run the Ingest Module for File Type Detection
TextClassifierTrainerReportModule.noModel.text=No model was trained.
TextClassifierTrainerReportModule.srcModuleName.text=Text classifier model
TextClassifierTrainerReportModule.training.text=Training model.
TextClassifierTrainerReportModule.trainIOException.text=IOException while training model
TextClassifierTrainerReportModule.writingModel.text=Writing model: 
